<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.alarmspeed = room_speed * 5;
population = 4
water = 5
oxygen = 5
food = 0
electricity = 0
silicon = 0
iron = 0
aluminium = 0;
alarm[0] =  global.alarmspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var water_used = instance_number(obj_module_farm) + population;
var water_produced = 4;
var food_used = population;
var food_produced = instance_number(obj_module_farm) * 10;
show_debug_message("Food used: " + string(food_used))
show_debug_message("Food produced: " + string(food_produced))


if ((water + water_produced - water_used) &gt; -1)
{
    water = water + water_produced - water_used;
} 
else
{
    show_debug_message("Not enough water, someone died")
    population -= 1;
}

if ((food + food_produced - food_used) &gt; -1)
{
    food = food + food_produced - food_used;
} 
else
{
    show_debug_message("Not enough food, someone died")
    population -= 1;
}


alarm[0] = global.alarmspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button_pressed(mb_left) == true)
{
    //show_debug_message(string(instance_position(floor(mouse_x/64)*64, floor(mouse_y/64)*64, obj_module_farming)))
    //if  (instance_position(floor(mouse_x/64)*64, floor(mouse_y/64)*64, obj_module_farming) != -4)
    if (!instance_position(mouse_x, mouse_y, obj_module_blank_floor))
    {   
            if instance_position(mouse_x-64, mouse_y, obj_module_blank_floor) or instance_position(mouse_x+64, mouse_y, obj_module_blank_floor) or instance_position(mouse_x, mouse_y+64, obj_module_blank_floor) or instance_position(mouse_x, mouse_y-64, obj_module_blank_floor)
            {
                show_debug_message("Placing room at: " + string(floor(mouse_x/64)*64) + ", " + string(floor(mouse_y/64)*64));
                instance_create(floor(mouse_x/64)*64, floor(mouse_y/64)*64-12, obj_module_blank_floor);
            }
    }
}

if (keyboard_check_pressed(ord("f")))
{
    if (instance_position(mouse_x, mouse_y, obj_module_blank_floor))
    {
        instance_create(floor(mouse_x/64)*64, floor(mouse_y/64)*64-12, obj_module_farm);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(0, 0, "Population: " + string(obj_main.population));
draw_text(0, 10, "Water: " + string(obj_main.water));
draw_text(0, 20, "Oxygen: " + string(obj_main.oxygen));
draw_text(0, 30, "Food: " + string(obj_main.food));
draw_text(0, 40, "Turn time: " + string(alarm[0]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
