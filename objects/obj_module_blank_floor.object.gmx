<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blankroom_floor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
self.turns_alive = -1;
//Set an alarm,
//Room can't be allocated for one turn
alarm[0] = obj_main.alarm[0];

//




instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_module_blank_bottom);
instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_module_blank_top);
//Checks for door creation
//  Up
if instance_position(x+32, y-32, obj_module_blank_floor)
{
    //show_debug_message("Found room up")
    instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_door_up); 
    if (instance_position(x+32, y-1, obj_wall_down))
    {
        instance_destroy(instance_position(x+32, y-1, obj_wall_down))
        instance_create(floor(x/64)*64, (floor(y/64)-1)*64+52, obj_door_down)
    }
}
else
{
    instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_wall_up);
}

// Down
if instance_position(x+32, y+96, obj_module_blank_floor)
{
    //show_debug_message("Found room down")
    instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_door_down); 
    if (instance_position(x+32, y+64, obj_wall_up))
    {
        instance_destroy(instance_position(x+32, y+64, obj_wall_up))
        instance_create(floor(x/64)*64, (floor(y/64)+1)*64+52, obj_door_up)
    }
}
else
{
    instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_wall_down);
}

//  Left
if instance_position(x-32, y+32, obj_module_blank_floor)
{
    //show_debug_message("Found room left")
    instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_door_left); 
    if (instance_position(x-1, y+24, obj_wall_right))
    {
        
        instance_destroy(instance_position(x-1, y+24, obj_wall_right))
        instance_create((floor(x/64)-1)*64, floor(y/64)*64+52, obj_door_right)
    }
}
else
{
    instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_wall_left);
}

//  Right
if instance_position(x+96, y+32, obj_module_blank_floor)
{
    instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_door_right);
    if (instance_position(x+64, y+24, obj_wall_left))
    {
        instance_destroy(instance_position(x+64, y+24, obj_wall_left))
        instance_create((floor(x/64)+1)*64, floor(y/64)*64+52, obj_door_left)
    }
}
else
{
    instance_create(floor(x/64)*64, floor(y/64)*64+52, obj_wall_right);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = global.alarmspeed;
turns_alive += 1;
show_debug_message("Turn")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if turns_alive &lt; 0
{
    image_alpha = 0.1;
}
else
{
    image_alpha = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
