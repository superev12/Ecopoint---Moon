<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Stores a 3D array of modules. 
i and j are the coordinates on the grid
data is the piece of information we are referencing about it
*/
var i;
var j;
var data;
enum data_slots{
    taken,
    module,
    room_turns_alive,
    module_turns_alive,
    room_object,
    module_object
};
enum module_types{
    none,
    farm,
    water_tank,
    oxygen_tank
};

module_grid = ds_grid_create(32,32);

for (i=0; i&lt;32; i++;)
{
    for (j=0; j&lt;32; j++;)
    {
        //show_debug_message(string(data_structure))
        data_structure = ds_map_create()
        ds_map_add(data_structure, data_slots.taken, false);
        ds_map_add(data_structure, data_slots.module, module_types.none);
        ds_map_add(data_structure, data_slots.room_turns_alive, -1);
        ds_map_add(data_structure, data_slots.module_turns_alive, -1);
        ds_map_add(data_structure, data_slots.room_object, 0);
        show_debug_message(string(data_structure))
        ds_grid_add(module_grid, i, j, data_structure);
        show_debug_message(string(ds_grid_get(module_grid,i,j)))
    }
}

show_debug_message(string(module_grid))

set_space_taken(4, 3, true);
set_room_object(4, 3, instance_find(obj_module_blank_floor, 0))


/*
var z;
var w;
var k;


for (z = 0; z &lt; 32; z++;)
{
    for (w = 0; w &lt; 32; w++;)
    {
        for (k = 0; k &lt; 2; k++;)
        {
            show_debug_message(ds_map_find_value(ds_grid_get(module_grid,z,w),k));      
        }
    
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
